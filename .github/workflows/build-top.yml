name: Leaderboards – Nightly build from llm-stats

on:
  workflow_dispatch:
  schedule:
    - cron: "23 6 * * *"   # tous les jours 06:23 UTC

permissions:
  contents: write
  issues: write

concurrency:
  group: leaderboards-nightly
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      LEADERBOARD_URL: https://llm-stats.com/
      SAVE_SNAPSHOT: "true"   # commite aussi HTML/PNG pour debug

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Cache du binaire Chrome téléchargé par Puppeteer
      - name: Cache Puppeteer browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/puppeteer
          key: pptr-${{ runner.os }}-chrome-stable

      - name: Install Puppeteer (stealth)
        run: |
          npm init -y
          npm i puppeteer@22 puppeteer-extra puppeteer-extra-plugin-stealth

      - name: Install Chrome for Testing
        run: npx puppeteer browsers install chrome

      - name: Run scraper
        run: node scrape_leaderboards.mjs

      - name: Validate data (gate)
        id: gate
        run: |
          node -e "const c=require('./counts.json'); const ok=(c.code===5 && c.multimodal===5 && c.knowledge===5 && c.longest_context>0 && c.cheapest>1 && c.fastest>1 && c.table>0); console.log('OK=',ok); if(!ok){console.error('Counts:',c); process.exit(2);} else {console.log('Counts:',c)}"

      - name: Commit & push results
        if: steps.gate.outcome == 'success'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "update: top-leaderboards.json (table + cards) from llm-stats"
            git push
          else
            echo "No changes to commit."
          fi

      - name: Open Issue if validation failed
        if: steps.gate.outcome != 'success'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const counts = fs.existsSync('counts.json') ? JSON.stringify(require('./counts.json')) : 'n/a';
            const hasSnap = fs.existsSync('leaderboard-snapshot.html') && fs.existsSync('leaderboard-snapshot.png');
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "Leaderboards build failed – data gate",
              body: `Validation failed.\nCounts=${counts}\nSnapshots committed=${hasSnap ? 'yes' : 'no'}`
            });
